name: Deploy Helm to GKE (No DNS)

on:
  workflow_dispatch:
  push:
    paths:
      - 'helm/**'
      - '.github/workflows/deploy-no-dns.yaml'

jobs:
  deploy:
    name: Deploy Helm Chart
    runs-on: ubuntu-latest

    env:
      HELM_RELEASE_NAME: microservice
      HELM_CHART_DIR: ./helm/microservice

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Check Helm Chart
        run: |
          if [ ! -f "$HELM_CHART_DIR/Chart.yaml" ]; then
            echo "❌ Chart.yaml not found in $HELM_CHART_DIR"
            exit 1
          fi

      - name: Deploy via Helm
        run: |
          helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_DIR \
            --namespace default --create-namespace

      - name: Wait and Get Ingress IP
        run: |
          echo "Waiting for Ingress IP..."
          for i in {1..20}; do
            IP=$(kubectl get ingress $HELM_RELEASE_NAME -n default -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
            if [[ -n "$IP" ]]; then
              echo "✅ App is available at:"
              echo "http://$IP or http://$IP.nip.io"
              exit 0
            fi
            echo "Waiting ($i)..."
            sleep 10
          done
          echo "❌ Ingress IP not available after waiting."
          kubectl describe ingress $HELM_RELEASE_NAME -n default || true
          exit 1

